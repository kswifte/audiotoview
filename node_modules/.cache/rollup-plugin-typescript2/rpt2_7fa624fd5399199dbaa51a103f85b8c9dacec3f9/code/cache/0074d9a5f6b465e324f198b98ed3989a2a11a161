{"code":"function initToShow(options) {\r\n    let { el, url, color = 'red', size = 1 } = options;\r\n    let { cvs, audioEl } = createEl(el);\r\n    let isInit = false;\r\n    let analyser;\r\n    let dataArray;\r\n    let ctx = cvs.getContext('2d');\r\n    function initCvs() {\r\n        cvs.width = window.innerWidth * devicePixelRatio;\r\n        cvs.height = (window.innerHeight / 2) * devicePixelRatio;\r\n    }\r\n    initCvs();\r\n    audioEl.onplay = function () {\r\n        if (isInit) {\r\n            return;\r\n        }\r\n        //音频上下文\r\n        const audioCtx = new AudioContext();\r\n        const source = audioCtx.createMediaElementSource(audioEl);\r\n        //分析器\r\n        analyser = audioCtx.createAnalyser();\r\n        analyser.fftSize = 1024 / (2 * size);\r\n        //创建8位数组接收数据\r\n        dataArray = new Uint8Array(analyser.frequencyBinCount);\r\n        source.connect(analyser);\r\n        analyser.connect(audioCtx.destination);\r\n        isInit = true;\r\n    };\r\n    function draw() {\r\n        requestAnimationFrame(draw);\r\n        //清空画布\r\n        const { width, height } = cvs;\r\n        ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, width, height);\r\n        if (!isInit) {\r\n            return;\r\n        }\r\n        //让分析器节点分析出数据到数组中\r\n        analyser.getByteFrequencyData(dataArray);\r\n        const len = dataArray.length;\r\n        const barWidth = width / len;\r\n        ctx.fillStyle = color;\r\n        for (let i = 0; i < len; i++) {\r\n            const data = dataArray[i]; //8位整数 小于256\r\n            const barHeight = data / 255 * height;\r\n            const x1 = i * barWidth + width / 2;\r\n            const x2 = width / 2 - (i + 1) * barWidth;\r\n            const y = height - barHeight;\r\n            ctx === null || ctx === void 0 ? void 0 : ctx.fillRect(x1, y, barWidth - 2, barHeight);\r\n            ctx === null || ctx === void 0 ? void 0 : ctx.fillRect(x2, y, barWidth - 2, barHeight);\r\n        }\r\n    }\r\n    draw();\r\n    function createEl(el) {\r\n        el.innerHTML = `<canvas id=\"canvas\"></canvas>\r\n        <audio controls src=${url} id=\"audio\" crossOrigin=\"anonymous\"></audio>`;\r\n        const cvs = document.getElementById(\"canvas\");\r\n        const audioEl = document.getElementById(\"audio\");\r\n        return { cvs, audioEl };\r\n    }\r\n}\r\nexport default initToShow;\r\n","references":["E:/vscode/audiotoview/src/types/index.ts"]}
